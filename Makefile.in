# -*- mode: makefile; coding: utf-8 -*-

# 
# Copyright Â© 2013, 2014, 2015, 2016, 2017, 2018 
# Douglas Lewan, d.lewan2000@gmail.com.
# All rights reserved.
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 

PACKAGE		=	@PACKAGE_NAME@
PACKAGE_VERSION	=	@PACKAGE_VERSION@

################################
# 
# What we're building
# 
CFILES		=	
HFILES		=	
OFILES		=	


SHELLS		=	
CPIO_FILES	=	cpio-bin.el			\
			cpio-crc.el			\
			cpio.el				\
			cpio-dired.el			\
			cpio-entry-contents-mode.el 	\
			cpio-entry-header.el		\
			cpio-hpbin.el			\
			cpio-hpodc.el			\
			cpio-newc.el			\
			cpio-odc.el			\
			cpio-tar.el			\
			cpio-ustar.el			\
			cpio-wanted.el
SUPPORT_FILES	=	cpio-affiliated-buffers.el	\
			cpio-generic.el			\
			cpio-modes.el
APP_FILES	=	${CPIO_FILES} ${SUPPORT_FILES}

ELC_FILES	=	${APP_FILES:.el=.elc}

TEST_FILES	=	cab-test.el			\
			cpio-modes-test.el		\
			cpio-dired-crc-test.el		\
			cpio-dired-odc-test.el		\
			cpio-dired-test.el		\
			cpio-modes-test.el

SUPPORT_FILES	=	cpio-affiliated-buffers.el	\
			cpio-generic.el			\
			cpio-modes.el


EL_FILES	=	${APP_FILES} ${TEST_FILES} ${SUPPORT_FILES}
LIB_FILES	=
DOC_FILES	=
INFO_FILES	=

SRC_FILES	=	configure	\
			COPYING		\
			DESIGN		\
			install-sh	\
			Makefile.in	\
			NEWS		\
			QUESTIONS	\
			README		\
			stamp-h.in	\
			THANKS		\
			${EL_FILES}

subdirs		=	test_data/alphabet

################################
# 
# Where things are
# 

prefix		=	@prefix@
datarootdir	=	@datarootdir@
srcdir		=	@srcdir@
distdir		=	${PACKAGE}-${PACKAGE_VERSION}

# And where they go
bindir		=	${prefix}/bin
libdir		=	${prefix}/lib
lispdir		=	${prefix}/share/emacs/lisp
installdir	=	${lispdir}/cpio
docdir		=	@docdir@
dvidir		=	@infodir@
infodir		=	@infodir@
sharedir	=	${prefix}/share/${PACKAGE}/${PACKAGE_VERSION}
sharelibdir	=	${sharedir}/lib
sharelispdir	=	${sharedir}/lisp
srcdir		=	@srcdir@
abs_srcdir	=	@abs_srcdir@


################################
# 
# Distribution information
# 
TAR_OPTS	=	@tar_opts@
TAR_SUFFIX	=	@tar_suffix@

TARBALL		=	${PACKAGE}-${PACKAGE_VERSION}-${shell date +%Y%m%d%H%M%S}.${TAR_SUFFIX}


################################
# 
# Programs we use
# 

INSTALL	=	@INSTALL@
CC	=	@CC@
CFLAGS	=	

.el.elc:
	emacs -Q -batch ${BYTE_COMPILE_FLAGS} 			\
		-l bytecomp -f byte-compile-refresh-preloaded 	\
		-l cpio.el -f batch-byte-compile ${<} ;


################################
# Taken from emacs' lisp/Makefile.in
BYTE_COMPILE_EXTRA_FLAGS =
BIG_STACK_DEPTH = 2200
BIG_STACK_OPTS = --eval "(setq max-lisp-eval-depth $(BIG_STACK_DEPTH))"

# Set load-prefer-newer for the benefit of the non-bootstrappers.
BYTE_COMPILE_FLAGS = $(BIG_STACK_OPTS) \
  --eval '(setq load-prefer-newer t)' $(BYTE_COMPILE_EXTRA_FLAGS)
# EO stuff from emacs' lisp/Makefile.in
################################

################################################################

################################
# 
# Building
# 

default:	check_gnu
	@echo 
	@echo "There is no default action in this Makefile."
	${MAKE} help

help:	check_gnu
	@echo "The Makefile has the following targets:"
	@echo "    make check -- check_cab and check_modes."
	@echo "    make check_cab -- run automated tests of cpio-affilitated-buffers.el."
	@echo "    make check_copyrights -- scan files for copyrights."
	@echo "    make check_modes -- run automated tests agains cpio-modes.el."
	@echo "    make clean -- remove byte compiled files."
	@echo "    make dist -- build a distributable tarball."
	@echo "    make distclean -- clean, leaving only distribution files."
	@echo "    make help -- present this help."
	@echo "    make maintainer-clean -- clean and remove crufty files."
	@echo "    make mostlyclean -- like distclean."
	@echo "    make simple_install -- install the code for cpio-mode."
	@echo "    make tags -- run tags on the cpio-mode source."
	@echo "    make uninstall -- uninstall cpio-mode."
	@echo "    make update_versions -- update the Version: fields in cpio-mode code."
	@echo "    make version -- print the version of cpio-mode."
	@echo "The following targets are incomplete, incorrect or just not implemented:"
	@echo "    X make check -- run automated tests."
	@echo "    X make elc -- byte compile cpio-mode."
	@echo "    X make install -- install a byte compiled instance of cpio-mode."
	@echo "    X make check_bin -- run automated tests of binary format handling."
	@echo "    X make check_crc -- run automated tests of crc format handling."
	@echo "    X make check_newc -- run automated tests of newc format handling."
	@echo "    X make check_odc -- run automated tests of odc format handling."

version:
	@echo ${PACKAGE} ${PACKAGE_VERSION}

all:	default

.PHONY:	check_gnu elc update_versions

elc:	${ELC_FILES}

check_gnu:
	@${MAKE} --version >/dev/null 2>&1 || ( echo "This makefile requires GNU Make." && exit 1 )

update_versions:	configure.ac
	@for f in ${EL_FILES} ; do 											\
		sed -n -E -e 's/^;; Version: (.*)$$/;; Version: '${PACKAGE_VERSION}'/' -ep < $${f} >$${f}.tmp ; 	\
		mv -f $${f}.tmp $${f} ; 										\
	done

################################
# 
# Testing
# 

.PHONY: check check_cab check_bin check_crc check_newc check_odc installcheck
check:	check_cab check_modes # check_bin check_crc check_newc check_odc

file_check:
	@echo "################################################################"
	@echo "# "
	@echo "# Running tests in ${check_file}."
	@echo "# "
	emacs -batch -Q -eval "(setq load-path (add-to-list 'load-path \"${abs_srcdir}\"))" -l ert -l ${check_file} -f ert-run-tests-batch-and-exit 2>&1 | grep -v -e 'Modification-flag cleared' -e 'Wrote /'
	@echo "# "
	@echo "# EO tests in ${check_file}."
	@echo "# "
	@echo "################################################################"
	@echo ; echo ; echo 

check_cab:
	make check_file=cab-test.el file_check
check_modes:
	make check_file=cpio-modes-test.el file_check
check_bin:
	make check_file=cpio-dired-bin-test.el file_check
check_crc:
	make check_file=cpio-dired-crc-test.el file_check
check_newc:
	make check_file=cpio-dired-test.el file_check
check_odc:
	make check_file=cpio-dired-odc-test.el file_check

installcheck: check

.PHONY: check_copyrights
check_copyrights: ${SRC_FILES}
	@EXIT=0 ; 								\
	for f in ${SRC_FILES} ; do						\
		if grep -q -i copyright $${f} ; then 				\
			: ; 							\
		else 								\
			echo "$${f} looks like it is missing a copyright" ; 	\
			EXIT=1 ; 						\
		fi ; 								\
	done ; 									\
	exit ${EXIT}
	pd=`pwd` ; 								\
	for d in ${subdirs} ; do						\
		cd $${d} ; 							\
		make check_copyrights ; 					\
		cd $${pd} ; 							\
	done

################################
# 
# Installation
# 

.PHONY:	install simple_install 
install:	check_gnu uninstall ${ELC_FILES} installdirs
	${INSTALL} ${ELC_FILES} ${installdir}

simple_install: check_gnu uninstall installdirs
	${INSTALL} ${APP_FILES} ${installdir}

# ${ELC_FILES}:	elc

installdirs:	check_gnu
	test -d ${installdir} || mkdir -p ${installdir}

uninstall:
	rm -rf ${installdir}/*.el ${installdir}/*.elc

install-html:
install-dvi:
install-pdf:
install-ps:
install-strip:

configure-default:	configure
	./configure

################################
# 
# Hygiene
# 

clean:
	-rm -f *~ ${ELC_FILES}

distclean: check_gnu	clean
	if [ -e ${distdir} ] ; then rm -rf ${distdir} ; fi
	tb=${TARBALL} ; if [ -e $${tb} ] ; then rm -rf $${tb} ; fi 
	for f in ${PACKAGE}-${PACKAGE_VERSION}-*.${TAR_SUFFIX} ; do	\
		if [ -e "$${f}" ] ; then				\
			rm -rf "$${f}" ;				\
		fi ;							\
	done

mostlyclean:
maintainer-clean:


################################
# 
# Documentation
# 
dvi:
html:
pdf:
ps:
info:


################################
# 
# Distribution
# 

dist:	check_gnu	distdir
	tb=${TARBALL} ; cd ${srcdir} && tar ${TAR_OPTS} -f $${tb} ${distdir} && cp $${tb} ..

distdir:	check_gnu	distclean
	if [ -e ${distdir} ] ; then rm -rf ${distdir} || exit 1 ; fi ; 			\
	mkdir -p ${distdir} || exit 1 ;							\
	tar -c -f - ${SRC_FILES} | ( cd ${distdir} ; tar -x -f - )

################################
# 
# Miscellany
# 

tags:
	etags *.el

################
# 
# Autoreconfiscation.
# 

$(srcdir)/configure: configure.ac # aclocal.m4
	cd '$(srcdir)' && autoconf

# autoheader might not change config.h.in, so touch a stamp file.
$(srcdir)/config.h.in: stamp-h.in
$(srcdir)/stamp-h.in: configure.ac # aclocal.m4
	cd '$(srcdir)' # && autoheader
	echo timestamp > '$(srcdir)/stamp-h.in'

config.h: stamp-h
stamp-h: config.h.in config.status
	./config.status

Makefile: Makefile.in config.status
	./config.status

config.status: configure
	./config.status --recheck
