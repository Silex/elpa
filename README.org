* Introduction

When collecting information using copy/paste, it would be useful if one could
stay at one place to copy things instead of constantly switching between the
place where you copy and the place where you paste.

Further it would be great if Emacs could detect clipboard entries and adjust them
to the format one would like to have them.

This is what clipboard-collector is about. Here is an example for collecting
contact information from a website for org capture (contact info gets
transformed to be used as property drawer items).


#+BEGIN_SRC elisp
(clipboard-collector-create cc-capture-rss
 (("^http.*twitter.com"                           ":TWITTER: %s")
  ("^http.*reddit.com"                            ":REDDIT: %s")
  ("^http.*github.com"                            ":GITHUB: %s")
  ("^http.*youtube.com"                           ":YOUTUBE: %s")
  ("^http.*stack.*.com"                           ":STACK: %s")
  ("^https?://.*\\.[a-z]+/?\\'"                   ":DOMAIN: %s")
  ("^.*@.*"                                       ":MAIL: %s")
  ("^http.*\\(dotemacs\\|.?emacs\\|.?emacs.d\\)"  ":DOTEMACS: %s"))
 (lambda (items)
   (clipboard-collector-finish-default items)
   (org-capture-finalize)))
#+END_SRC

This creates a command called =cc-capture-rss=. When called the clipboard is
observed and on changes which match one of the regexes, the clipboard contents
are transformed via the format string and saved for later processing.

When done you can press =C-c C-c= to call the finalize function (in the above
example it would inserts the collected items and finish the org-capture).

If you would like to simply collect items as they are and paste them at some other
place afterwards you could use:

#+BEGIN_SRC elisp
(clipboard-collector-create cc-all
 ((".*"  "%s")))
#+END_SRC

It's also possible to provide an additional function to transform the contents
before applying the format string. For example to upcase all collected items you would
use something like this:

#+BEGIN_SRC elisp
(clipboard-collector-create cc-all-up
 ((".*"  "%s" upcase)))
#+END_SRC
